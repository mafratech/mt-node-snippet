{
  "Node Express Controller Class": {
    "prefix": ["necc", "node-express-controller-class"],
    "body": [
      "import ${0:${TM_FILENAME/Controller*(.*)//g}} from '../models/${0:${TM_FILENAME/Controller*(.*)//g}}'",
      "\t",
      "class ${0:${TM_FILENAME/Controller*(.*)//g}}Controller {",
      "  async index(request, response) {",
      "    return response.json({})",
      "  }",
      "\t",
      "  async show(request, response) {",
      "    return response.json({})",
      "  }",
      "\t",
      "  async store(request, response) {",
      "    return response.json({})",
      "  }",
      "\t",
      "  async update(request, response) {",
      "    return response.json({})",
      "  }",
      "\t",
      "  async delete(request, response) {",
      "    return response.json({})",
      "  }",
      "}",
      "\t",
      "export default new ${0:${TM_FILENAME/Controller*(.*)//g}}Controller()\n"
    ],
    "description": "Create Node Express Controller Class With Default Methods"
  },
  "Node Sequelize Model Class": {
    "prefix": ["nsmc", "node-sequelize-model-class"],
    "body": [
      "import Sequelize, { Model } from 'sequelize'",
      "\t",
      "class ${0:${TM_FILENAME/(.*)\\..+$/$1/}} extends Model {",
      "  static init(sequelize) {",
      "    super.init(",
      "      {",
      "        $BLOCK_COMMENT_START attrs $BLOCK_COMMENT_END",
      "      },",
      "      { sequelize }",
      "    )",
      "\t",
      "    return this",
      "  }",
      "}",
      "\t",
      "export default ${0:${TM_FILENAME/(.*)\\..+$/$1/}}\n"
    ],
    "description": "Create Node Sequelize Class Extends Sequelize Model With Init Methods"
  },
  "Sequelize Database Class Config": {
    "prefix": ["sdcc", "sequelize-database-class-config"],
    "body": [
      "import Sequelize from 'sequelize'",
      "import databaseConfig from '../config/database'",
      "\t",
      "$LINE_COMMENT import User from '../app/models/User'",
      "\t",
      "const models = [",
      "  $LINE_COMMENT User,",
      "]",
      "\t",
      "class Database {",
      "  constructor() {",
      "    this.init()",
      "  }",
      "\t",
      "  init() {",
      "    this.connection = new Sequelize(databaseConfig)",
      "    models.map((model) => model.init(this.connection))",
      "  }",
      "}",
      "\t",
      "export default new Database()\n"
    ],
    "description": "Create Sequelize Database Class configurations with init method"
  }
}
